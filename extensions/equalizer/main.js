import{MenuState as e,DataProvider as t,StringLoader as n,FRParser as i}from"../../core.min.js";class Equalizer{constructor(){this.config={DefaultSampleRate:48e3,TrebleStartFrom:7e3,AutoEQRange:[20,15e3],OptimizeQRange:[.5,2],OptimizeGainRange:[-12,12],OptimizeDeltas:[[10,10,10,5,.1,.5],[10,10,10,2,.1,.2],[10,10,10,1,.1,.1]],GraphicEQRawFrequences:new Array(Math.ceil(Math.log(1e3)/Math.log(1.0072))).fill(null).map(((e,t)=>20*Math.pow(1.0072,t))),GraphicEQFrequences:Array.from(new Set(new Array(Math.ceil(Math.log(1e3)/Math.log(1.0563))).fill(null).map(((e,t)=>Math.floor(20*Math.pow(1.0563,t)))))).sort(((e,t)=>e-t))}}_interpolate(e,t){let n=0;return e.map((e=>{for(;n<t.length-1;++n){let[i,r]=t[n],[a,s]=t[n+1];if(0==n&&e<i)return[e,r];if(e>=i&&e<a){return[e,r+(s-r)*(e-i)/(a-i)]}}return[e,t[t.length-1][1]]}))}_lowshelf(e,t,n){e/=this.config.DefaultSampleRate,e=Math.max(1e-6,Math.min(e,1)),t=Math.max(1e-4,Math.min(t,1e3)),n=Math.max(-40,Math.min(n,40));let i=2*Math.PI*e,r=Math.sin(i),a=Math.cos(i),s=Math.pow(10,n/40),l=r/(2*t),o=2*Math.sqrt(s)*l||0,c=s+1+(s-1)*a+o;return[1,-2*(s-1+(s+1)*a)/c,(s+1+(s-1)*a-o)/c,s*(s+1-(s-1)*a+o)/c,2*s*(s-1-(s+1)*a)/c,s*(s+1-(s-1)*a-o)/c]}_highshelf(e,t,n){e/=this.config.DefaultSampleRate,e=Math.max(1e-6,Math.min(e,1)),t=Math.max(1e-4,Math.min(t,1e3)),n=Math.max(-40,Math.min(n,40));let i=2*Math.PI*e,r=Math.sin(i),a=Math.cos(i),s=Math.pow(10,n/40),l=r/(2*t),o=2*Math.sqrt(s)*l||0,c=s+1-(s-1)*a+o;return[1,2*(s-1-(s+1)*a)/c,(s+1-(s-1)*a-o)/c,s*(s+1+(s-1)*a+o)/c,-2*s*(s-1+(s+1)*a)/c,s*(s+1+(s-1)*a-o)/c]}_peaking(e,t,n){e/=this.config.DefaultSampleRate,e=Math.max(1e-6,Math.min(e,1)),t=Math.max(1e-4,Math.min(t,1e3)),n=Math.max(-40,Math.min(n,40));let i=2*Math.PI*e,r=Math.sin(i),a=Math.cos(i),s=r/(2*t),l=Math.pow(10,n/40),o=1+s/l;return[1,-2*a/o,(1-s/l)/o,(1+s*l)/o,-2*a/o,(1-s*l)/o]}_calculateGains(e,t){let n=new Array(e.length).fill(0);for(let i=0;i<t.length;++i){let[r,a,s,l,o,c]=t[i];for(let t=0;t<e.length;++t){let i=2*Math.PI*e[t]/this.config.DefaultSampleRate,u=4*Math.pow(Math.sin(i/2),2),h=10*Math.log10(Math.pow(l+o+c,2)+(l*c*u-(o*(l+c)+4*l*c))*u)-10*Math.log10(Math.pow(r+a+s,2)+(r*s*u-(a*(r+s)+4*r*s))*u);n[t]+=h}}return n}calculateGainsFromFilter(e,t){const n=this._filtersToCoeffs(t);return this._calculateGains(e,n)}calculatePreamp(e,t){const n=e,i=this.applyFilters(e,t);let r=-1/0;for(let e=0;e<n.length;++e)r=Math.max(r,i[e][1]-n[e][1]);return-r}_calculateDistance(e,t){let n=0;for(let i=0;i<e.length;++i){let r=Math.abs(e[i][1]-t[i][1]);n+=r>=.1?r:0}return n/e.length}_filtersToCoeffs(e){return e.map((e=>e.freq&&e.gain&&e.q?"LSQ"===e.type?this._lowshelf(e.freq,e.q,e.gain):"HSQ"===e.type?this._highshelf(e.freq,e.q,e.gain):"PK"===e.type?this._peaking(e.freq,e.q,e.gain):null:null)).filter((e=>e))}_normalizeResolution(e,t){const n=[20],i=Math.pow(2,1/48);for(;n[n.length-1]<2e4;)n.push(n[n.length-1]*i);const r=this._interpolatePoints(n,e),a=this._interpolatePoints(n,t);let s=n.findIndex((e=>e>=1e3)),l=s;const o=r[s][1]-a[l][1];return{source:r,target:a.map((e=>[e[0],e[1]+o]))}}_interpolatePoints(e,t){if(!t||0===t.length)return e.map((e=>[e,0]));const n=[...t].sort(((e,t)=>e[0]-t[0]));return e.map((e=>{let t=0;for(;t<n.length-1&&n[t+1][0]<e;)t++;if(t>=n.length-1)return[e,n[n.length-1][1]];if(t<0||e<=n[0][0])return[e,n[0][1]];{const[i,r]=n[t],[a,s]=n[t+1];return[e,r+Math.log(e/i)/Math.log(a/i)*(s-r)]}}))}applyFilters(e,t){let n=e.map((e=>e[0])),i=this._filtersToCoeffs(t),r=this._calculateGains(n,i);return n.map(((t,n)=>[t,e[n][1]+r[n]]))}_searchCandidates(e,t,n){let i=0,r=-1,a=[],[s,l]=this.config.AutoEQRange;for(let o=0;o<e.length;++o){let[c,u]=e[o],h=u-t[o][1],d=Math.abs(h),p=d<n?0:h/d;if(p!==i){if(r>=0){if(0!=i){let n=e[r][0],i=c,u=Math.sqrt(n*i),h=this._interpolate([u],t.slice(r,o))[0][1]-this._interpolate([u],e.slice(r,o))[0][1],d=u/(i-n);u>=s&&u<=l&&a.push({type:"PK",freq:u,q:d,gain:h})}r=-1}else r=o;i=p}}return a}_freqUnit(e){return e<100?1:e<1e3?10:e<1e4?100:1e3}_stripFilters(e){let[t,n]=this.config.OptimizeQRange,[i,r]=this.config.OptimizeGainRange;return e.map((e=>({type:e.type,freq:Math.floor(e.freq-e.freq%this._freqUnit(e.freq)),q:Math.min(Math.max(Math.floor(10*e.q)/10,t),n),gain:Math.min(Math.max(Math.floor(10*e.gain)/10,i),r)})))}convertFilterAsGraphicEQ(e){let t=this.config.GraphicEQRawFrequences,n=this.config.GraphicEQFrequences,i=this._filtersToCoeffs(e),r=this._calculateGains(t,i),a=t.map(((e,t)=>[e,r[t]])),s=0,l=n.map(((e,i)=>{let r=i<n.length-1?Math.sqrt(e*n[i+1]):2e4,l=[];for(;s<t.length&&t[s]<r;++s)l.push(a[s][1]);return[e,l.reduce(((e,t)=>e+t),0)/l.length]})),o=l.reduce(((e,t)=>e>t[1]?e:t[1]),-1/0);return l=l.map((([e,t])=>[e,t-o])),l}_optimize(e,t,n,i,r=!1){n=this._stripFilters(n);let[a,s]=this.config.AutoEQRange,[l,o]=this.config.OptimizeQRange,[c,u]=this.config.OptimizeGainRange,[h,d,p,g,f,m]=this.config.OptimizeDeltas[i],[q,v,y]=r?[n.length-1,-1,-1]:[0,n.length,1];for(let i=q;i!=v;i+=y){let r=n[i],q=this.applyFilters(e,n.filter(((e,t)=>t!==i))),v=r,y=this._calculateDistance(this.applyFilters(q,[r]),t),testNewFilter=(e,n,i)=>{let h=r.freq+e*this._freqUnit(r.freq)*g,d=r.q+n*f,p=r.gain+i*m;if(h<a||h>s||d<l||d>o||p<c||p>u)return!1;let S={type:r.type,freq:h,q:d,gain:p},x=this.applyFilters(q,[S]),b=this._calculateDistance(x,t);return b<y&&(v=S,y=b,!0)};for(let e=-h;e<=h;++e)for(let t=d;t>=-d;--t){for(let n=0;n<=p&&testNewFilter(e,t,n);++n);for(let n=0;n>=-p&&testNewFilter(e,t,n);--n);}n[i]=v}return n.sort(((e,t)=>e.freq-t.freq))}autoEQ(e,t,n={}){const i=n.maxFilters||8,r=n.freqRange||this.config.AutoEQRange,a=n.qRange||this.config.OptimizeQRange,s=n.gainRange||this.config.OptimizeGainRange;this.config.AutoEQRange=r,this.config.OptimizeQRange=a,this.config.OptimizeGainRange=s;const l=this._normalizeResolution(e,t),o=l.source.filter((e=>e[0]>=r[0]&&e[0]<=r[1])),c=l.target.filter((e=>e[0]>=r[0]&&e[0]<=r[1])),u=Math.max(Math.floor(i/2)-1,1);let h=this._searchCandidates(o,c,1).filter((e=>e.freq<=this.config.TrebleStartFrom)).sort(((e,t)=>e.q-t.q)).slice(0,u).sort(((e,t)=>e.freq-t.freq));for(let e=0;e<this.config.OptimizeDeltas.length;e++)h=this._optimize(o,c,h,e);const d=this.applyFilters(o,h),p=i-h.length;let g=this._searchCandidates(d,c,.5).sort(((e,t)=>e.q-t.q)).slice(0,p).sort(((e,t)=>e.freq-t.freq));for(let e=0;e<this.config.OptimizeDeltas.length;e++)g=this._optimize(d,c,g,e);let f=[...h,...g];for(let e=0;e<this.config.OptimizeDeltas.length;e++)f=this._optimize(o,c,f,e);return f}}const r={iconPath:{plus:'<path d="M11 11V5H13V11H19V13H13V19H11V13H5V11H11Z"></path>',subtract:'<path d="M5 11V13H19V11H5Z"></path>',sortDesc:'<path d="M20 4V16H23L19 21L15 16H18V4H20ZM12 18V20H3V18H12ZM14 11V13H3V11H14ZM14 4V6H3V4H14Z"></path>',import:'<path d="M13 10H18L12 16L6 10H11V3H13V10ZM4 19H20V12H22V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V12H4V19Z"></path>',export:'<path d="M4 19H20V12H22V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V12H4V19ZM13 9V16H11V9H6L12 3L18 9H13Z"></path>',arrowDown:'<path d="M11.9999 13.1714L16.9497 8.22168L18.3639 9.63589L11.9999 15.9999L5.63599 9.63589L7.0502 8.22168L11.9999 13.1714Z"></path>',volumeMute:'<path d="M5.88889 16.0001H2C1.44772 16.0001 1 15.5524 1 15.0001V9.00007C1 8.44778 1.44772 8.00007 2 8.00007H5.88889L11.1834 3.66821C11.3971 3.49335 11.7121 3.52485 11.887 3.73857C11.9601 3.8279 12 3.93977 12 4.05519V19.9449C12 20.2211 11.7761 20.4449 11.5 20.4449C11.3846 20.4449 11.2727 20.405 11.1834 20.3319L5.88889 16.0001ZM20.4142 12.0001L23.9497 15.5356L22.5355 16.9498L19 13.4143L15.4645 16.9498L14.0503 15.5356L17.5858 12.0001L14.0503 8.46454L15.4645 7.05032L19 10.5859L22.5355 7.05032L23.9497 8.46454L20.4142 12.0001Z"></path>',volumeFull:'<path d="M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z"></path>',play:'<path d="M19.376 12.4161L8.77735 19.4818C8.54759 19.635 8.23715 19.5729 8.08397 19.3432C8.02922 19.261 8 19.1645 8 19.0658V4.93433C8 4.65818 8.22386 4.43433 8.5 4.43433C8.59871 4.43433 8.69522 4.46355 8.77735 4.5183L19.376 11.584C19.6057 11.7372 19.6678 12.0477 19.5146 12.2774C19.478 12.3323 19.4309 12.3795 19.376 12.4161Z"></path>',pause:'<path d="M6 5H8V19H6V5ZM16 5H18V19H16V5Z"></path>',previous:'<path d="M8 11.3333L18.2227 4.51823C18.4524 4.36506 18.7628 4.42714 18.916 4.65691C18.9708 4.73904 19 4.83555 19 4.93426V19.0657C19 19.3419 18.7761 19.5657 18.5 19.5657C18.4013 19.5657 18.3048 19.5365 18.2227 19.4818L8 12.6667V19C8 19.5523 7.55228 20 7 20C6.44772 20 6 19.5523 6 19V5C6 4.44772 6.44772 4 7 4C7.55228 4 8 4.44772 8 5V11.3333Z"></path>'},getSVG(e,t=""){return`\n    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"\n      style="${""!==t?t:"width: 1rem; height: 1rem;"}"\n    >\n      ${this.iconPath[e]}\n    </svg>\n    `}},a={name:"equalizer",version:"1.0.1",apiLevel:1,coreMinVersion:"1.0.0",coreMaxVersion:"1.0.x",description:"Parametric equalizer extension for modernGraphTool",author:"potatosalad775"};class EqualizerExtension extends HTMLElement{constructor(e={}){super(),this.config=e,this.currentFilters={filters:[],preamp:null},this.currentDeviceUUID={source:null,target:null},this.currentSourceUUID=null,(async()=>{await this._initializeComponents(),this._initializeStyles(),this._setupEventListeners(),this.audioPlayer=this.querySelector("eq-audio-player")})()}async _initializeComponents(){await Promise.resolve().then((function(){return s})),await Promise.resolve().then((function(){return l})),await Promise.resolve().then((function(){return o})),await Promise.resolve().then((function(){return c})),await Promise.resolve().then((function(){return u})),this.innerHTML='\n      <div class="equalizer-container">\n        <div class="eq-controls">\n          <eq-filter-list></eq-filter-list>\n        </div>\n        <div class="eq-controls">\n          <eq-select></eq-select>\n          <eq-autoeq></eq-autoeq>\n          <eq-audio-player></eq-audio-player>\n          <eq-uploader></eq-uploader>\n        </div>\n      </div>\n    ';[this.querySelector("eq-filter-list"),this.querySelector("eq-autoeq")].forEach((e=>{e&&e.setConfig?.(this.config)}))}_initializeStyles(){const e=document.createElement("style");e.textContent='\n  equalizer-extension {\n    display: block;\n    container-type: inline-size;\n    container-name: equalizer-host;\n  }\n    \n  .equalizer-container {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto;\n    gap: 1rem;\n    overflow: hidden;\n    box-sizing: border-box;\n    height: fit-content;\n  }\n  \n  .eq-controls {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .eq-controls:last-child {\n    padding-bottom: 1rem;\n  }\n\n  @container equalizer-host (min-width: 600px) {\n    .equalizer-container {\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr;\n    }\n\n    .eq-controls {\n      padding-bottom: 1rem;\n    }\n  }\n\n  eq-filter-list {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .eq-filter-header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n    padding-bottom: 0.3rem;\n\n    .preamp-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 0.2rem;\n      font-size: 0.9rem;\n      font-weight: 600;\n    }\n\n    .eq-filter-button-row {\n      display: flex;\n      flex-direction: row;\n      gap: 0.2rem;\n    }\n  }\n\n  .eq-filter-bands {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .eq-filter-band {\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    gap: 0.3rem;\n    padding: 0.4rem;\n    height: 1.5rem;\n    border: 1px solid var(--gt-color-outline);\n    border-radius: 0.5rem;\n    background: var(--gt-color-surface-container);\n\n    label {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    input[type="checkbox"] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0 0.3rem;\n      border: 0.1rem solid var(--gt-color-outline);\n      width: 0.8rem;\n      height: 0.8rem;\n      accent-color: var(--gt-color-primary);\n    }\n    select {\n      flex: 1;\n      min-width: 3.5rem;\n    }\n    .filter-freq {\n      flex: 2;\n    }\n    .filter-q, .filter-gain {\n      flex: 1;\n    }\n  }\n\n  .eq-data-button-row {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n  }\n\n  eq-select {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0.5rem;\n    border: 1px solid var(--gt-color-outline);\n    border-radius: 0.5rem;\n    background: var(--gt-color-surface-container);\n\n    select {\n      height: 2rem;\n    }\n  }\n\n  eq-autoeq {\n    padding: 0.5rem;\n    border: 1px solid var(--gt-color-outline);\n    border-radius: 0.5rem;\n    background: var(--gt-color-surface-container);\n    overflow: hidden;\n\n    p {\n      margin: 0.2rem 0;\n      text-align: center;\n    }\n  }\n\n  .auto-eq-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n\n    gt-button {\n      width: 100%;\n    }\n  }\n\n  .ae-params {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 0.5rem;\n  }\n\n  .ae-param-row {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    label { \n      flex: 3;\n    }\n    input { \n      flex: 2;\n      height: 1rem;\n    }\n  }\n\n  .audio-player {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    padding: 0.5rem;\n    border: 1px solid var(--gt-color-outline);\n    border-radius: 0.5rem;\n    background: var(--gt-color-surface-container);\n  }\n  .ap-audio-source {\n    width: 100%;\n  }\n  .ap-tone-controls {\n    gap: 0.7rem;\n  }\n  .ap-file-info {\n    gap: 0.3rem;\n  }\n  .ap-file-input {\n    cursor: pointer;\n    width: 100%;\n  }\n  .ap-tone-controls, .ap-file-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0.5rem 0.1rem 0.2rem 0.1rem;\n\n    label {\n      font-weight: 600;\n    }\n    input {\n      margin: 0;\n      width: 100%;\n    }\n    .ap-file-name {\n      margin: 0 0.1rem 0.4rem 0.1rem;\n      overflow-x: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      max-width: 100%;\n    }\n    .ap-time-info {\n      display: flex;\n      justify-content: space-between;\n      margin: 0 0.1rem 0.2rem 0.1rem;\n      width: 100%;\n    }\n    .ap-time-slider {\n      width: 100%;\n    }\n  }\n  .ap-control {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid var(--gt-color-outline);\n    border-radius: 0.5rem;\n    padding: 0.2rem 0.5rem;\n    background: var(--gt-color-surface-container-lowest);\n\n    .ap-playback-controls {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 0.2rem;\n    }\n    \n    .ap-volume-control {\n      flex: 1;\n      width: 0;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 0.5rem;\n      margin: 0 0.2rem 0 0.5rem;\n\n      label, input {\n        display: flex;\n        align-items: center;\n      }\n      input {\n        flex: 1;\n      }\n    }\n  }\n\n  .ap-filter-toggle {\n    display: flex;\n    align-items: center;\n    margin-right: 0.2rem;\n\n    label {\n      display: flex;\n      align-items: center;\n      gap: 0.2rem;\n    }\n  }\n\n  .eq-uploader {\n    display: flex;\n    flex-direction: row;\n    gap: 0.5rem;\n\n    gt-button {\n      flex: 1;\n      height: 2rem;\n    }\n  }\n\n  equalizer-extension {\n    select, input[type="number"] {\n      width: 100%;\n      padding: 0.2rem;\n      border: 1px solid var(--gt-color-outline);\n      border-radius: 0.4rem;\n      color: var(--gt-color-on-surface);\n      background: var(--gt-color-surface-container-lowest);\n      font: var(--gt-typescale-body-medium);\n    }\n    select {\n      appearance: none;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      padding-left: 0.3rem;\n      border: 1px solid var(--gt-color-outline);\n      background-repeat: no-repeat;\n      background-position: right center;\n      background-image: url(\'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23666"><path d="M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z"></path></svg>\');\n      outline: none;\n      cursor: pointer;\n    }\n\n    input[type="range"] {\n      -webkit-appearance: none;\n      appearance: none;\n    }\n    input[type="range"]::-webkit-slider-runnable-track {\n      -webkit-appearance: none;\n      appearance: none;\n      background: rgba(0,0,0,0.3);\n      border-radius: 0.5rem;\n      height: 0.5rem;\n    }\n    input[type="range"]::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      width: 1rem;\n      height: 1rem;\n      border-radius: 1rem;\n      margin-top: -4px;\n      background: var(--gt-color-primary);\n      cursor: pointer;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border: none;\n      background: none;\n      width: 2rem;\n      height: 2rem;\n      cursor: pointer;\n      border-radius: 2rem;\n      color: var(--gt-color-on-surface);\n      -webkit-tap-highlight-color: transparent;\n    }\n    @media (hover: hover) and (pointer: fine) {\n      button:hover {\n        background: var(--gt-color-surface-container-low);\n      }\n    }\n  }\n}\n',this.appendChild(e)}_setupEventListeners(){document.addEventListener("equalizer:select-changed",(e=>{"source"===e.detail.type&&(this.currentSourceUUID=e.detail.uuid),this._updatePreview()})),document.addEventListener("equalizer:select-removed",(e=>{this.currentSourceUUID===e.detail.uuid&&(this.currentSourceUUID=null),this._updatePreview()})),document.addEventListener("equalizer:filters-changed",(e=>{this.currentFilters={filters:e.detail.filters,preamp:e.detail.preamp},this._updatePreview(),this.audioPlayer.updateFilters(this.currentFilters)}))}_updatePreview(){if(null===this.currentSourceUUID)return;const e=this.currentFilters.filters,n=t.getFRData(this.currentSourceUUID);if(!n)return;const i={};let r;Object.keys(n.channels).forEach((t=>{if(n.channels[t]){const r=new Equalizer,a=[...n.channels[t].data.map((e=>e[0]))],s=[...n.channels[t].data.map((e=>e[1]))],l=r.calculateGainsFromFilter(a,e),o=a.map(((e,t)=>[e,s[t]+l[t]]));i[t]={data:o,metadata:{...n.channels[t].metadata}}}}));if(Array.from(t.frDataMap).some((([e,t])=>"inserted-eq"===t.type&&t.identifier===n.identifier&&t.dispSuffix===`${n.dispSuffix.trim()} (EQ)`&&(r=e,!0))))t.updateFRDataWithRawData(r,i,{identifier:`${n.identifier}`,dispSuffix:`${n.dispSuffix} (EQ)`});else{const e=Object.keys(n.channels).includes("AVG")?"AVG":Object.keys(n.channels)[0];t.insertRawFRData("eq",`${n.identifier}`,i,{dispChannel:[e],dispSuffix:`${n.dispSuffix} (EQ)`,basePhoneId:this.currentSourceUUID})}}}customElements.define("equalizer-extension",EqualizerExtension),e.addExtensionMenu("equalizer","EQUALIZER","equalizer-extension");class EQFilterList extends HTMLElement{constructor(){super(),this.config={},this.eqBands=5,this.extraEQBandsMax=20,this.innerHTML=`\n    <div class="eq-filter-header">\n      <div class="preamp-row">\n        <label>${n.getString("extension.equalizer.filter-list.preamp","Preamp")}:</label>\n        <span class="preamp-value">0.0 dB</span>\n      </div>\n      <div class="eq-filter-button-row">\n        <button class="add-filter" title="Add Band">${r.getSVG("plus")}</button>\n        <button class="remove-filter" title="Remove Band">${r.getSVG("subtract")}</button>\n        <button class="sort-filters" title="Sort by Frequency">${r.getSVG("sortDesc")}</button>\n      </div>\n    </div>\n    <div class="eq-filter-bands"></div>\n    <div class="eq-data-button-row">\n      <gt-button class="import-filters" title="Import" variant="outlined" style="flex: 1">\n        ${r.getSVG("import","width: 1rem; height: 1rem;")}\n        <span>${n.getString("extension.equalizer.filter-list.import","Import")}</span>\n      </gt-button>\n      <gt-button class="export-filters" title="Export" variant="outlined" style="flex: 1">\n        ${r.getSVG("export","width: 1rem; height: 1rem;")}\n        <span>${n.getString("extension.equalizer.filter-list.export","Export")}</span>\n      </gt-button>\n    </div>\n    <div class="eq-data-button-row">\n      <gt-button class="export-graphic" title="Export as Graphic EQ" variant="outlined" style="flex: 1">\n        ${r.getSVG("export","width: 1rem; height: 1rem;")}\n        <span>${n.getString("extension.equalizer.filter-list.export-graphic-eq","Export as Graphic EQ (Wavelet)")}</span>\n      </gt-button>\n    </div>\n    `}setConfig(e){this.config=e,this.eqBands=parseInt(e?.INITIAL_EQ_BANDS)||this.eqBands,this.extraEQBandsMax=parseInt(e?.MAXIMUM_EQ_BANDS)||this.extraEQBandsMax,this._setupFilterElements(!0)}connectedCallback(){this._setupEventListener(),document.addEventListener("equalizer:auto-eq-generated",(e=>{const t=e.detail.filters;this._updateFilterElementsWithValues(t),this._dispatchFilterUpdateEvent()})),n.addObserver(this._updateLanguage.bind(this))}_setupFilterElements(e=!0){e&&(this.querySelector(".eq-filter-bands").innerHTML="");const t=e?this.eqBands:1;for(let e=0;e<t;e++){const e=document.createElement("div");e.className="eq-filter-band",e.innerHTML=`\n        <label>\n          <input type="checkbox" checked class="filter-enabled" />\n        </label>\n        <select class="filter-type">\n          <option value="PK">${n.getString("extension.equalizer.filter-list.peak","Peak")}</option>\n          <option value="LSQ">${n.getString("extension.equalizer.filter-list.lowshelf","Low Shelf")}</option>\n          <option value="HSQ">${n.getString("extension.equalizer.filter-list.highshelf","High Shelf")}</option>\n        </select>\n        <input type="number" class="filter-freq" placeholder="${n.getString("extension.equalizer.filter-list.freq","Frequency (Hz)")}" min="20" max="20000" />\n        <input type="number" class="filter-q" placeholder="${n.getString("extension.equalizer.filter-list.q","Q")}" min="0.1" max="10" step="0.1" />\n        <input type="number" class="filter-gain" placeholder="${n.getString("extension.equalizer.filter-list.gain","Gain (dB)")}" min="-30" max="30" step="0.1" />\n      `,this.querySelector(".eq-filter-bands").appendChild(e),e.querySelector(".filter-enabled").addEventListener("change",(()=>this._dispatchFilterUpdateEvent())),e.querySelector(".filter-type").addEventListener("change",(()=>this._dispatchFilterUpdateEvent())),e.querySelectorAll('input[type="number"]').forEach((e=>{e.addEventListener("input",(()=>this._dispatchFilterUpdateEvent()))}))}}_setupEventListener(){this.querySelector(".add-filter").addEventListener("click",(()=>{this.eqBands<this.extraEQBandsMax&&(this.eqBands=Math.min(this.eqBands+1,this.extraEQBandsMax),this._setupFilterElements(!1),this._dispatchFilterUpdateEvent())})),this.querySelector(".remove-filter").addEventListener("click",(()=>{this.eqBands>1&&(this.eqBands=Math.max(this.eqBands-1,1),this.querySelector(".eq-filter-bands").removeChild(this.querySelector(".eq-filter-bands").lastChild),this._dispatchFilterUpdateEvent())})),this.querySelector(".sort-filters").addEventListener("click",(()=>{this._sortFilters(),this._dispatchFilterUpdateEvent()})),this.querySelector(".import-filters").addEventListener("click",(()=>{this._importFilters(),this._dispatchFilterUpdateEvent()})),this.querySelector(".export-filters").addEventListener("click",(()=>{this._exportFilters()})),this.querySelector(".export-graphic").addEventListener("click",(()=>{this._exportGraphicEQ()}))}_getFiltersFromElements(e=!1){const t=[];return this.querySelectorAll(".eq-filter-band").forEach((n=>{const i=n.querySelector(".filter-enabled").checked,r=n.querySelector(".filter-type").value,a=parseFloat(n.querySelector(".filter-freq").value),s=parseFloat(n.querySelector(".filter-q").value),l=parseFloat(n.querySelector(".filter-gain").value);a&&s&&l&&(i||e)&&t.push({enabled:i,type:r,freq:a,q:s,gain:l})})),t}_sortFilters(){const e=this._getFiltersFromElements();e.sort(((e,t)=>e.freq-t.freq)),this._updateFilterElementsWithValues(e)}_updateFilterElementsWithValues(e){this.eqBands=e.length,this._setupFilterElements();const t=this.querySelectorAll(".eq-filter-band");e.forEach(((e,n)=>{const i=t[n];i.querySelector(".filter-enabled").checked=!e.disabled,i.querySelector(".filter-type").value=e.type,i.querySelector(".filter-freq").value=e.freq,i.querySelector(".filter-q").value=e.q,i.querySelector(".filter-gain").value=e.gain}))}_updatePreampDisplay(){const e=this._getFiltersFromElements();if(!e.length)return 0;const t=Array.from({length:100},((e,t)=>20*Math.pow(10,t*Math.log10(1e3)/99))).map((e=>[e,0])),n=new Equalizer;this.preamp=n.calculatePreamp(t,e),this.querySelector(".preamp-value").textContent=`${this.preamp.toFixed(1)} dB`}_importFilters(){const e=document.createElement("input");e.type="file",e.accept=".txt",e.onchange=e=>{const t=e.target.files[0],n=new FileReader;n.onload=e=>{const t=e.target.result,n=this._parseFilterText(t);n.length&&(this._updateFilterElementsWithValues(n),this._dispatchFilterUpdateEvent())},n.readAsText(t)},e.click()}_exportFilters(){const e=this._getFiltersFromElements();if(!e.length)return void alert(n.getString("extension.equalizer.filter-list.no-filter-export-alert","Please add at least one filter before exporting."));let t=`Preamp: ${this.preamp.toFixed(1)} dB\n`;e.forEach(((e,n)=>{let i=e.type;"LSQ"!==i&&"HSQ"!==i||(i=i.substr(0,2)+"C"),t+=`Filter ${n+1}: ON ${i} Fc ${e.freq.toFixed(0)} Hz Gain ${e.gain.toFixed(1)} dB Q ${e.q.toFixed(3)}\n`})),this._downloadText(t,"filters.txt")}_exportGraphicEQ(){const e=this._getFiltersFromElements();if(!e.length)return void alert(n.getString("extension.equalizer.filter-list.no-filter-export-alert","Please add at least one filter before exporting."));const t="GraphicEQ: "+(new Equalizer).convertFilterAsGraphicEQ(e).map((([e,t])=>`${e.toFixed(0)} ${t.toFixed(1)}`)).join("; ");this._downloadText(t,"graphic_eq.txt")}_downloadText(e,t){const n=new Blob([e],{type:"text/plain"}),i=URL.createObjectURL(n),r=document.createElement("a");r.href=i,r.download=t,r.click(),URL.revokeObjectURL(i)}_parseFilterText(e){const t=[],n=e.split("\n");for(const e of n)if(e.startsWith("Preamp:")){const t=e.match(/Preamp:\s*([+-]?\d*\.?\d+)\s*dB/);t&&(this.preamp=parseFloat(t[1]),this.querySelector(".preamp-value").textContent=`${this.preamp.toFixed(1)} dB`)}else if(e.includes("Filter")){const n=e.match(/(\w+)\s+Fc\s+(\d+)\s+Hz\s+Gain\s+([+-]?\d*\.?\d+)\s+dB\s+Q\s+([+-]?\d*\.?\d+)/);if(n){const[e,i,r,a,s]=n;t.push({enabled:!0,type:"LSC"===i?"LSQ":"HSC"===i?"HSQ":i,freq:parseFloat(r),gain:parseFloat(a),q:parseFloat(s)})}}return t}_updateLanguage(){const e=this.querySelector(".preamp-row > label");e&&(e.innerHTML=n.getString("extension.equalizer.filter-list.preamp","Preamp")+":");const t=this.querySelector(".import-filters > span");t&&(t.innerHTML=n.getString("extension.equalizer.filter-list.import","Import"));const i=this.querySelector(".export-filters > span");i&&(i.innerHTML=n.getString("extension.equalizer.filter-list.export","Export"));const r=this.querySelector(".export-graphic > span");r&&(r.innerHTML=n.getString("extension.equalizer.filter-list.export-graphic-eq","Export as Graphic EQ (Wavelet)"));const a=this.querySelectorAll('.filter-type > option[value="PK"]');a&&a.forEach((e=>e.innerHTML=n.getString("extension.equalizer.filter-list.peak","Peak")));const s=this.querySelectorAll('.filter-type > option[value="LSQ"]');s&&s.forEach((e=>e.innerHTML=n.getString("extension.equalizer.filter-list.lowshelf","Low Shelf")));const l=this.querySelectorAll('.filter-type > option[value="HSQ"]');l&&l.forEach((e=>e.innerHTML=n.getString("extension.equalizer.filter-list.highshelf","High Shelf")));const o=this.querySelectorAll(".filter-freq");o&&o.forEach((e=>e.placeholder=n.getString("extension.equalizer.filter-list.freq","Frequency (Hz)")));const c=this.querySelectorAll(".filter-q");c&&c.forEach((e=>e.placeholder=n.getString("extension.equalizer.filter-list.q","Q")));const u=this.querySelectorAll(".filter-gain");u&&u.forEach((e=>e.placeholder=n.getString("extension.equalizer.filter-list.gain","Gain (dB)")))}_dispatchFilterUpdateEvent(){this._updatePreampDisplay(),this.dispatchEvent(new CustomEvent("equalizer:filters-changed",{bubbles:!0,composed:!0,detail:{filters:this._getFiltersFromElements(),preamp:this.preamp,eqBandCount:this.eqBands}}))}}customElements.define("eq-filter-list",EQFilterList);var s=Object.freeze({__proto__:null});class EQSelect extends HTMLElement{constructor(){super(),this.innerHTML=`\n      <select class="eq-source-select">\n        <option value="">\n          ${n.getString("extension.equalizer.phone-select.option-source","Select device to EQ")}\n        </option>\n      </select>\n      ${r.getSVG("arrowDown")}\n      <select class="eq-target-select">\n        <option value="">\n          ${n.getString("extension.equalizer.phone-select.option-target","Select target for AutoEQ")}\n        </option>\n      </select>\n    `,this.sourceSelect=this.querySelector(".eq-source-select"),this.targetSelect=this.querySelector(".eq-target-select")}connectedCallback(){this._setupGraphSelector(null,!0),this._setupEventListeners()}_setupGraphSelector(e=null,i=!1){if(i)this.sourceSelect.innerHTML=`<option value="">\n        ${n.getString("extension.equalizer.phone-select.option-source","Select device to EQ")}\n      </option>`,this.targetSelect.innerHTML=`<option value="">\n        ${n.getString("extension.equalizer.phone-select.option-target","Select target for AutoEQ")}\n      </option>`,Array.from(t.frDataMap).forEach((([e,t])=>{if("inserted-eq"!==t.type){const n=document.createElement("option");n.value=e,n.textContent=`${t.identifier} ${t.dispSuffix||""}`.trim(),"phone"===t.type&&this.sourceSelect.appendChild(n.cloneNode(!0)),this.targetSelect.appendChild(n)}}));else{const n=t.getFRData(e),i=document.createElement("option");i.value=e,i.textContent=`${n.identifier} ${n.dispSuffix||""}`.trim(),"phone"===n.type&&this.sourceSelect.appendChild(i.cloneNode(!0)),this.targetSelect.appendChild(i.cloneNode(!0))}this._sortSelectOptions()}_setupEventListeners(){window.addEventListener("core:fr-phone-added",(e=>this._setupGraphSelector(e.detail.uuid))),window.addEventListener("core:fr-target-added",(e=>this._setupGraphSelector(e.detail.uuid))),window.addEventListener("core:fr-phone-removed",(e=>{this.sourceSelect.querySelector(`option[value="${e.detail.uuid}"]`).remove(),this.targetSelect.querySelector(`option[value="${e.detail.uuid}"]`).remove(),this._dispatchSelectRemovedEvent(e.detail.uuid)})),window.addEventListener("core:fr-target-removed",(e=>{this.targetSelect.querySelector(`option[value="${e.detail.uuid}"]`).remove(),this._dispatchSelectRemovedEvent(e.detail.uuid)})),this.sourceSelect.addEventListener("change",(()=>this._dispatchSelectEvent("source",this.sourceSelect.value))),this.targetSelect.addEventListener("change",(()=>this._dispatchSelectEvent("target",this.targetSelect.value))),n.addObserver(this._updateLanguage.bind(this))}_sortSelectOptions(){Array.from(this.sourceSelect.children).sort(((e,t)=>e.value?t.value?e.textContent.localeCompare(t.textContent):1:-1)).forEach((e=>this.sourceSelect.appendChild(e))),Array.from(this.targetSelect.children).sort(((e,t)=>{if(!e.value)return-1;if(!t.value)return 1;const n=e.textContent.endsWith(" Target"),i=t.textContent.endsWith(" Target");return n&&!i?-1:!n&&i?1:e.textContent.localeCompare(t.textContent)})).forEach((e=>this.targetSelect.appendChild(e)))}_updateLanguage(){const e=this.sourceSelect.querySelector('option[value=""]');e&&(e.innerHTML=n.getString("extension.equalizer.phone-select.option-source","Select device to EQ"));const t=this.targetSelect.querySelector('option[value=""]');t&&(t.innerHTML=n.getString("extension.equalizer.phone-select.option-target","Select target for AutoEQ"))}_dispatchSelectEvent(e,t){this.dispatchEvent(new CustomEvent("equalizer:select-changed",{bubbles:!0,composed:!0,detail:{type:e,uuid:t}}))}_dispatchSelectRemovedEvent(e){this.dispatchEvent(new CustomEvent("equalizer:select-removed",{bubbles:!0,composed:!0,detail:{uuid:e}}))}}customElements.define("eq-select",EQSelect);var l=Object.freeze({__proto__:null});class EQAudioPlayer extends HTMLElement{constructor(){super(),this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.noiseNode=null,this.sourceNode=null,this.oscillatorNode=null,this.filterNodes=[],this.filtersEnabled=!0,this.isPlaying=!1,this.isSeeking=!1,this.seekTimeout=null,this.startTime=0,this.pausedAt=0,this.currentTime=0,this.innerHTML=`\n      <div class="audio-player">\n        <select class="ap-audio-source">\n          <option value="">${n.getString("extension.equalizer.player.option-init","Select Audio Source")}</option>\n          <option value="white">${n.getString("extension.equalizer.player.option-white","White Noise")}</option>\n          <option value="pink">${n.getString("extension.equalizer.player.option-pink","Pink Noise")}</option>\n          <option value="tone">${n.getString("extension.equalizer.player.option-tone","Tone Generator")}</option>\n          <option value="file">${n.getString("extension.equalizer.player.option-file","Audio File")}</option>\n        </select>\n        <div class="ap-tone-controls" style="display: none;">\n          <div class="ap-tone-row">\n            <label class="ap-tone-freq-label">${n.getString("extension.equalizer.player.tone-freq-label","Frequency: ")}</label>\n            <label><span class="ap-freq-value">1000</span> Hz</label>\n          </div>\n          <input type="range" class="ap-freq-slider" min="0" max="1000" step="1" value="699">\n        </div>\n        <div class="ap-file-upload-section" style="display: none;">\n          <input type="file" class="ap-file-input" accept="audio/*">\n        </div>\n        <div class="ap-file-info" style="display: none;">\n          <div class="ap-time-slider">\n            <input type="range" class="ap-position-slider" min="0" max="100" step="0.1" value="0">\n          </div>\n          <span class="ap-time-info">\n            <span class="ap-current-time">0:00</span>\n            <span class="ap-total-time">0:00</span>\n          </span>\n        </div>\n        <div class="ap-control">\n          <div class="ap-playback-controls">\n            <button class="ap-prev-button">${r.getSVG("previous")}</button>\n            <button class="ap-play-button">${r.getSVG("play")}</button>\n          </div>\n          <gt-divider style="width: 2px; margin: 0.1rem 0.5rem"></gt-divider>\n          <div class="ap-volume-control">\n            <label class="ap-volume-slider-icon">${r.getSVG("volumeFull","width: 1rem; height: 1rem;")}</label>\n            <input type="range" class="ap-volume-slider" min="0" max="1" step="0.01" value="0.1">\n          </div>\n        </div>\n        <div class="ap-filter-toggle">\n          <label class="ap-filter-checkbox-label">\n            <input type="checkbox" class="ap-filter-checkbox" checked>\n            <span>\n              ${n.getString("extension.equalizer.player.filter-toggle","EQ Effect")}\n            </span>\n          </label>\n        </div>\n      </div>\n    `}connectedCallback(){this._handleAudioSourceChange=this._handleAudioSourceChange.bind(this),this._handleFileInputChange=this._handleFileInputChange.bind(this),this._handlePrevBtnClick=this._handlePrevBtnClick.bind(this),this._handlePlayBtnClick=this._handlePlayBtnClick.bind(this),this._handleFreqSliderChange=this._handleFreqSliderChange.bind(this),this._handlePositionSliderMouseDown=this._handlePositionSliderMouseDown.bind(this),this._handlePositionSliderMouseUp=this._handlePositionSliderMouseUp.bind(this),this._handlePositionSliderInput=this._handlePositionSliderInput.bind(this),this._handleVolumeSliderInput=this._handleVolumeSliderInput.bind(this),this._handleFilterToggleChange=this._handleFilterToggleChange.bind(this),this.querySelector(".ap-audio-source").addEventListener("change",this._handleAudioSourceChange),this.querySelector(".ap-file-input").addEventListener("change",this._handleFileInputChange),this.querySelector(".ap-prev-button").addEventListener("click",this._handlePrevBtnClick),this.querySelector(".ap-play-button").addEventListener("click",this._handlePlayBtnClick),this.querySelector(".ap-freq-slider").addEventListener("input",this._handleFreqSliderChange),this.querySelector(".ap-position-slider").addEventListener("mousedown",this._handlePositionSliderMouseDown),this.querySelector(".ap-position-slider").addEventListener("mouseup",this._handlePositionSliderMouseUp),this.querySelector(".ap-position-slider").addEventListener("input",this._handlePositionSliderInput),this.querySelector(".ap-volume-slider").addEventListener("input",this._handleVolumeSliderInput),this.querySelector(".ap-filter-checkbox").addEventListener("change",this._handleFilterToggleChange),n.addObserver(this._updateLanguage.bind(this))}disconnectedCallback(){this.stopAudio(),this.querySelector(".ap-audio-source").removeEventListener("change",this._handleAudioSourceChange),this.querySelector(".ap-file-input").removeEventListener("change",this._handleFileInputChange),this.querySelector(".ap-prev-button").removeEventListener("click",this._handlePrevBtnClick),this.querySelector(".ap-play-button").removeEventListener("click",this._handlePlayBtnClick),this.querySelector(".ap-freq-slider").removeEventListener("input",this._handleFreqSliderChange),this.querySelector(".ap-position-slider").removeEventListener("mousedown",this._handlePositionSliderMouseDown),this.querySelector(".ap-position-slider").removeEventListener("mouseup",this._handlePositionSliderMouseUp),this.querySelector(".ap-position-slider").removeEventListener("input",this._handlePositionSliderInput),this.querySelector(".ap-volume-slider").removeEventListener("input",this._handleVolumeSliderInput),this.querySelector(".ap-filter-checkbox").removeEventListener("change",this._handleFilterToggleChange),n.removeObserver(this._updateLanguage.bind(this))}_handleAudioSourceChange(e){this.isPlaying&&this.stopAudio(),this.querySelector(".ap-tone-controls").style.display="tone"===e.target.value?"flex":"none",this.querySelector(".ap-file-upload-section").style.display="file"===e.target.value?"block":"none","file"!==e.target.value&&(this.querySelector(".ap-file-info").style.display="none",this.querySelector(".ap-file-input").value="",this.audioBuffer=null)}_handleFileInputChange(e){const t=e.target.files[0];t&&this._loadAudioFile(t)}_handlePrevBtnClick(){this.resetAudio()}_handlePlayBtnClick(){this.isPlaying?this.pauseAudio():this.playAudio()}_handleFreqSliderChange(e){const t=Math.log10(20),n=(Math.log10(2e4)-t)/1e3,i=Math.round(Math.pow(10,t+e.target.value*n));this.querySelector(".ap-freq-value").textContent=i,this.oscillatorNode&&this.isPlaying&&this.oscillatorNode.frequency.setValueAtTime(i,this.audioContext.currentTime)}_handlePositionSliderMouseDown(){this.isSeeking=!0}_handlePositionSliderMouseUp(e){if(!this.audioBuffer)return;const t=e.target.value/100*this.audioBuffer.duration;this.seekTo(t),clearTimeout(this.seekTimeout),this.seekTimeout=setTimeout((()=>{this.isSeeking=!1}),200)}_handlePositionSliderInput(e){if(!this.audioBuffer)return;const t=e.target.value/100*this.audioBuffer.duration;this.pausedAt=t,this._updateTimeDisplay()}_handleVolumeSliderInput(e){this._updateVolume(e.target.value),"0"===e.target.value?this.querySelector(".ap-volume-slider-icon").innerHTML=r.getSVG("volumeMute","width: 1rem; height: 1rem;"):this.querySelector(".ap-volume-slider-icon").innerHTML=r.getSVG("volumeFull","width: 1rem; height: 1rem;")}_handleFilterToggleChange(e){this.filtersEnabled=e.target.checked,this._reconnectAudioChain()}_loadAudioFile(e){const t=new FileReader;t.onload=async e=>{try{this.audioBuffer=await this.audioContext.decodeAudioData(e.target.result),this.querySelector(".ap-file-info").style.display="flex",this.querySelector(".ap-total-time").textContent=this._formatTime(this.audioBuffer.duration),this.pausedAt=0,this._updateTimeDisplay()}catch(e){console.error("Error loading audio file:",e)}},t.readAsArrayBuffer(e)}_createAndStartAudioSource(e=this.pausedAt){this.sourceNode=this.audioContext.createBufferSource(),this.sourceNode.buffer=this.audioBuffer,this.sourceNode.start(0,e),this.filtersEnabled&&this.filterNodes.length>0?this.sourceNode.connect(this.filterNodes[0]):this.sourceNode.connect(this.gainNode),this.sourceNode.onended=()=>{this.isPlaying&&!this.isSeeking&&(this.pausedAt=0,this.isPlaying=!1,this.querySelector(".ap-play-button").innerHTML=r.getSVG("play"),this._updateTimeDisplay())}}_createNoiseNode(e){const t=2*this.audioContext.sampleRate,n=this.audioContext.createBuffer(1,t,this.audioContext.sampleRate),i=n.getChannelData(0);if("white"===e)for(let e=0;e<t;e++)i[e]=2*Math.random()-1;else if("pink"===e){let e=0,n=0,r=0,a=0,s=0,l=0,o=0;for(let c=0;c<t;c++){const t=2*Math.random()-1;e=.99886*e+.0555179*t,n=.99332*n+.0750759*t,r=.969*r+.153852*t,a=.8665*a+.3104856*t,s=.55*s+.5329522*t,l=-.7616*l-.016898*t,o=.115926*t,i[c]=e+n+r+a+s+l+o+.5362*t,i[c]*=.11}}const r=this.audioContext.createBufferSource();return r.buffer=n,r.loop=!0,r}_createToneGenerator(){const e=this.audioContext.createOscillator();e.type="sine";const t=Math.log10(20),n=(Math.log10(2e4)-t)/1e3,i=this.querySelector(".ap-freq-slider").value,r=Math.round(Math.pow(10,t+i*n));return e.frequency.value=r,e}_reconnectAudioChain(){if(!this.gainNode)return;let e=null;this.sourceNode?e=this.sourceNode:this.oscillatorNode&&(e=this.oscillatorNode),e&&(e.disconnect(),this.filtersEnabled&&this.filterNodes.length>0?e.connect(this.filterNodes[0]):e.connect(this.gainNode))}updateFilters(e){if(this.filterNodes.forEach((e=>e.disconnect())),this.filterNodes=[],!(e&&e.filters&&0!==e.filters.length&&e.preamp&&this.filtersEnabled))return void this._reconnectAudioChain();const t=this.audioContext.createGain();if(t.gain.value=Math.pow(10,e.preamp/20),this.filterNodes.push(t),e.filters.forEach((e=>{const t=this.audioContext.createBiquadFilter();switch(e.type){case"PK":t.type="peaking";break;case"LSQ":t.type="lowshelf";break;case"HSQ":t.type="highshelf"}t.frequency.value=e.freq,t.Q.value=e.q,t.gain.value=e.gain,this.filterNodes.push(t)})),this.filterNodes.length>1)for(let e=0;e<this.filterNodes.length-1;e++)this.filterNodes[e].connect(this.filterNodes[e+1]);this.filterNodes.length>0&&this.filterNodes[this.filterNodes.length-1].connect(this.gainNode),this._reconnectAudioChain()}playAudio(){const e=this.querySelector(".ap-audio-source").value;if(e){if(this.sourceNode&&this.sourceNode.disconnect(),this.oscillatorNode&&(this.oscillatorNode.disconnect(),this.oscillatorNode=null),this.gainNode||(this.gainNode=this.audioContext.createGain(),this.gainNode.connect(this.audioContext.destination),this.gainNode.gain.value=this.querySelector(".ap-volume-slider").value),"white"===e||"pink"===e)try{this.sourceNode=this._createNoiseNode(e),this.filtersEnabled&&this.filterNodes.length>0?this.sourceNode.connect(this.filterNodes[0]):this.sourceNode.connect(this.gainNode),this.sourceNode.start()}catch(e){console.error("Error starting noise node:",e)}else if("tone"===e)this.oscillatorNode=this._createToneGenerator(),this.filtersEnabled&&this.filterNodes.length>0?this.oscillatorNode.connect(this.filterNodes[0]):this.oscillatorNode.connect(this.gainNode),this.oscillatorNode.start();else{if("file"!==e||!this.audioBuffer)return;this._createAndStartAudioSource()}this.startTime=this.audioContext.currentTime,this.isPlaying=!0,this.querySelector(".ap-play-button").innerHTML=r.getSVG("pause"),"file"===e&&this._updateTimeDisplay()}}resetAudio(){this.isPlaying&&this.stopAudio(),this.pausedAt=0,this._updateTimeDisplay(),this.playAudio()}pauseAudio(){this.isPlaying&&(this.sourceNode&&(this.sourceNode.stop(),this.sourceNode.disconnect()),this.oscillatorNode&&(this.oscillatorNode.stop(),this.oscillatorNode.disconnect()),this.pausedAt+=this.audioContext.currentTime-this.startTime,this.isPlaying=!1,this.querySelector(".ap-play-button").innerHTML=r.getSVG("play"))}stopAudio(){this.sourceNode&&(this.sourceNode.stop(),this.sourceNode.disconnect(),this.sourceNode=null),this.oscillatorNode&&(this.oscillatorNode.stop(),this.oscillatorNode.disconnect(),this.oscillatorNode=null),this.isPlaying=!1,this.querySelector(".ap-play-button").innerHTML=r.getSVG("play")}seekTo(e){this.audioBuffer&&(this.isPlaying?(this.sourceNode.stop(),this._createAndStartAudioSource(e),this.startTime=this.audioContext.currentTime,this.pausedAt=e,this.querySelector(".ap-play-button").innerHTML=r.getSVG("pause")):(this.pausedAt=e,this._updateTimeDisplay()))}_updateVolume(e){this.gainNode&&(this.gainNode.gain.value=e)}_formatTime(e){return`${Math.floor(e/60)}:${(e=Math.floor(e%60)).toString().padStart(2,"0")}`}_updateTimeDisplay(){if(!this.audioBuffer)return;let e;e=this.isPlaying?Math.min(this.audioContext.currentTime-this.startTime+this.pausedAt,this.audioBuffer.duration):this.pausedAt,this.querySelector(".ap-current-time").textContent=this._formatTime(e),this.querySelector(".ap-position-slider").value=e/this.audioBuffer.duration*100,this.isPlaying&&requestAnimationFrame((()=>this._updateTimeDisplay()))}_updateLanguage(){const e=this.querySelector(".ap-audio-source");if(e){const t={"":["extension.equalizer.player.option-init","Select Audio Source"],white:["extension.equalizer.player.option-white","White Noise"],pink:["extension.equalizer.player.option-pink","Pink Noise"],tone:["extension.equalizer.player.option-tone","Tone Generator"],file:["extension.equalizer.player.option-file","Audio File"]};Object.entries(t).forEach((([t,[i,r]])=>{const a=e.querySelector(`option[value="${t}"]`);a&&(a.textContent=n.getString(i,r))}))}const t=this.querySelector(".ap-tone-freq-label");t&&(t.textContent=n.getString("extension.equalizer.player.tone-freq-label","Frequency: "));const i=this.querySelector(".ap-filter-checkbox-label");if(i){const e=i.querySelector('input[type="checkbox"]'),t=n.getString("extension.equalizer.player.filter-toggle","EQ Effect");i.innerHTML="",i.appendChild(e),i.appendChild(document.createTextNode(t))}}}customElements.define("eq-audio-player",EQAudioPlayer);var o=Object.freeze({__proto__:null});class EQAutoEQ extends HTMLElement{constructor(){super(),this.config={},this.currentDeviceUUID={source:null,target:null},this.currentEQBands=10,this.innerHTML=`\n      <div class="auto-eq-container">\n        <div class="ae-params">\n          <div class="ae-param-row">\n            <label class="ae-freq-label">${n.getString("extension.equalizer.autoeq.freq-range","Frequency Range")}</label>\n            <input type="number" class="freq-min" value="20" min="20" max="20000">\n            <input type="number" class="freq-max" value="15000" min="20" max="20000">\n          </div>\n          <div class="ae-param-row">\n            <label class="ae-q-label">${n.getString("extension.equalizer.autoeq.q-range","Q Range")}</label>\n            <input type="number" class="q-min" value="0.5" min="0.1" max="10" step="0.1">\n            <input type="number" class="q-max" value="2.0" min="0.1" max="10" step="0.1">\n          </div>\n          <div class="ae-param-row">\n            <label class="ae-gain-label">${n.getString("extension.equalizer.autoeq.gain-range","Gain Range")}</label>\n            <input type="number" class="gain-min" value="-12" min="-40" max="0">\n            <input type="number" class="gain-max" value="12" min="0" max="40">\n          </div>\n        </div>\n        <p class="ae-description">${n.getString("extension.equalizer.autoeq.description","AutoEQ will use as many filters as available.")}</p>\n        <gt-button class="ae-generate-eq">${n.getString("extension.equalizer.autoeq.run-button","Run AutoEQ")}</gt-button>\n      </div>\n    `}connectedCallback(){this._setupEventListeners(),n.addObserver(this._updateLanguage.bind(this))}setConfig(e){this.config=e,this.currentEQBands=parseInt(e?.INITIAL_EQ_BANDS)||this.currentEQBands}_setupEventListeners(){document.addEventListener("equalizer:select-changed",(e=>{this.currentDeviceUUID[e.detail.type]=e.detail.uuid})),document.addEventListener("equalizer:select-removed",(e=>{Object.keys(this.currentDeviceUUID).forEach((t=>{this.currentDeviceUUID[t]===e.detail.uuid&&(this.currentDeviceUUID[t]=null)}))})),document.addEventListener("equalizer:filters-changed",(e=>{this.currentEQBands=e.detail.eqBandCount})),this.querySelector(".ae-generate-eq").addEventListener("click",(async()=>{this.setAttribute("aria-busy","true"),await this._generateEQ(),this.setAttribute("aria-busy","false")}))}async _generateEQ(){const e=this.currentDeviceUUID.source,n=this.currentDeviceUUID.target;if(!e||!n)return void alert("Please select both source and target graphs");const i=t.getFRData(e),r=t.getFRData(n),a=parseInt(this.querySelector(".freq-min").value)||20,s=parseInt(this.querySelector(".freq-max").value)||15e3,l=parseFloat(this.querySelector(".q-min").value)||.5,o=parseFloat(this.querySelector(".q-max").value)||2,c=parseFloat(this.querySelector(".gain-min").value)||-12,u=parseFloat(this.querySelector(".gain-max").value)||12,getChannelData=e=>e.channels?.AVG?.data||e.channels?.L?.data||e.channels?.R?.data||e.channels.data,h=getChannelData(i)||[],d=getChannelData(r)||[],p=(new Equalizer).autoEQ(h,d,{maxFilters:this.currentEQBands,freqRange:[a,s],qRange:[l,o],gainRange:[c,u]});this.dispatchEvent(new CustomEvent("equalizer:auto-eq-generated",{bubbles:!0,composed:!0,detail:{filters:p}}))}_updateLanguage(){const e=this.querySelector(".ae-freq-label");e&&(e.innerHTML=n.getString("extension.equalizer.autoeq.freq-range","Frequency Range"));const t=this.querySelector(".ae-q-label");t&&(t.innerHTML=n.getString("extension.equalizer.autoeq.q-range","Q Range"));const i=this.querySelector(".ae-gain-label");i&&(i.innerHTML=n.getString("extension.equalizer.autoeq.gain-range","Gain Range"));const r=this.querySelector(".ae-description");r&&(r.innerHTML=n.getString("extension.equalizer.autoeq.description","AutoEQ will use as many filters as available."));const a=this.querySelector(".ae-generate-eq");a&&(a.innerHTML=n.getString("extension.equalizer.autoeq.run-button","Run AutoEQ"))}}customElements.define("eq-autoeq",EQAutoEQ);var c=Object.freeze({__proto__:null});class EQUploader extends HTMLElement{constructor(e={}){super(),this.innerHTML=`\n      <div class="eq-uploader extra-upload">\n        <gt-button class="eu-upload-fr-btn" variant="outlined">\n          ${r.getSVG("import","width: 1rem; height: 1rem;")}\n          ${n.getString("extension.equalizer.upload.fr","Upload FR")}\n        </gt-button>\n        <gt-button class="eu-upload-target-btn" variant="outlined">\n          ${r.getSVG("import","width: 1rem; height: 1rem;")}\n          ${n.getString("extension.equalizer.upload.target","Upload Target")}\n        </gt-button>\n      </div>\n    `,this._createFileInput("phone"),this._createFileInput("target"),this.querySelector(".eu-upload-fr-btn").addEventListener("click",(()=>{this._handleUpload("phone")})),this.querySelector(".eu-upload-target-btn").addEventListener("click",(()=>{this._handleUpload("target")})),n.addObserver(this._handleLanguageChange.bind(this))}_createFileInput(e){const t=document.createElement("input");t.type="file",t.accept=".txt",t.hidden=!0,t.dataset.sourceType=e,t.addEventListener("change",(e=>this._parseAndInsertData(e))),this.appendChild(t)}_handleUpload(e){this.querySelector(`input[data-source-type="${e}"]`).click()}async _parseAndInsertData(e){const n=e.target.files[0],r=e.target.dataset.sourceType;if(n)try{const e=await n.text(),a={AVG:await i.parseFRData(e)};await t.insertRawFRData(r,n.name.split(".")[0],a,{dispSuffix:"Uploaded",dispChannel:["AVG"]})}catch(e){console.error("Error processing file:",e),alert("Invalid file format. Please check the file structure.")}finally{e.target.value=""}}_handleLanguageChange(){this.querySelector(".eu-upload-fr-btn").textContent=n.getString("extension.equalizer.upload.fr","Upload FR"),this.querySelector(".eu-upload-target-btn").textContent=n.getString("extension.equalizer.upload.target","Upload Target")}}customElements.define("eq-uploader",EQUploader);var u=Object.freeze({__proto__:null});export{a as EXTENSION_METADATA,EqualizerExtension as default};
//# sourceMappingURL=main.js.map
